############################################
###             Base image               ###
############################################

# Taken from .ruby-version
ARG RUBY_VERSION=2.7.3
FROM ruby:$RUBY_VERSION-slim-buster as base
LABEL author="IdeaCrew"

ARG DEBIAN_FRONTEND=noninteractive

# Taken from Gemfile.lock
ARG BUNDLER_VERSION=2.2.14
ENV BUNDLER_VERSION=$BUNDLER_VERSION

ARG NODE_MAJOR=14
ENV NODE_MAJOR=$NODE_MAJOR

RUN apt-get update -qq && \
    apt-get install -yq --no-install-recommends \
      curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && truncate -s 0 /var/log/*log

# Add NodeJS to sources list
RUN curl -fsSL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -

# Basic packages needed because we're using the slim image
RUN apt-get update \
    && apt-get -yq dist-upgrade \
    && apt-get install -y \
      fontconfig \
      libcurl4-openssl-dev \
      libffi6 \
      libsodium23 \
      libxext6 \
      libxrender1 \
      libyaml-cpp0.6 \
      nodejs \
      openssl \
      sshpass \
      unzip \
      zip \
      zlibc \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && truncate -s 0 /var/log/*log

# Configure bundler and PATH, install bundler version
ENV GEM_HOME=/usr/local/bundle
ENV BUNDLE_PATH=$GEM_HOME
ENV BUNDLE_APP_CONFIG=$BUNDLE_PATH
ENV BUNDLE_BIN=/usr/local/bin
ENV BUNDLE_JOBS=4
ENV BUNDLE_RETRY=3

ENV LANG=C.UTF-8

ENV HOME=/fdsh_gateway

ENV PATH=$HOME/bin:$BUNDLE_BIN:$GEM_HOME/gems/bin:$PATH

# NOTE: 3.4.22 is latest rubygems-update version that works with ruby 2.7.6
# 3.5 requires ruby 3.0+
RUN gem install rubygems-update -v 3.4.22\
    && rm -f /usr/local/bin/ruby/gems/*/specifications/default/bundler-*.gemspec \
    && gem install bundler -v $BUNDLER_VERSION

RUN groupadd --gid 1001 nonroot \
  && useradd --uid 1001 --gid nonroot --shell /bin/bash --create-home nonroot

RUN mkdir $HOME \
  && chown -R nonroot:nonroot $HOME

# Configure app home directory
WORKDIR $HOME

COPY .docker/config/sectigo.crt /usr/local/share/ca-certificates/
RUN update-ca-certificates

ARG SECRET_KEY_BASE_DEFAULT=c8d2b9b204fbac78081a88a2c29b28cfeb82e6ccd3664b3948b813463b5917b315dbbd3040e8dffcb5b68df427099db0ce03e59e2432dfe5d272923b00755b82
ENV SECRET_KEY_BASE=$SECRET_KEY_BASE_DEFAULT

###############################################################################
###       Builder. Adds node and Yarn. Not necessary in production.         ###
###############################################################################

FROM base as builder

ARG DEBIAN_FRONTEND=noninteractive

# Add Yarn to the sources list
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
  && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list

# Install Nodejs & Yarn
RUN apt-get update -qq \
  && apt-get install -yq --no-install-recommends \
    build-essential \
    git \
    libpq-dev \
    yarn \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
  && truncate -s 0 /var/log/*log


########################################################
###          Node and Bundle for production          ###
########################################################

FROM builder as prod_gems_and_assets

ENV RAILS_ENV=production

ARG HOSTNAME=localhost

# Defaults set for local builds, overwritten in GHA
ENV FDSH_GATEWAY_DB_HOST=${HOSTNAME}
ENV FDSH_GATEWAY_DB_PORT=27017
ENV FDSH_GATEWAY_DB_NAME=fdsh_gateway_production
ENV RABBITMQ_URL=amqp://${HOSTNAME}:5672
ENV RABBITMQ_URL_EVENT_SOURCE=amqp://${HOSTNAME}
ENV RABBITMQ_HOST=amqp://${HOSTNAME}

# Need all gemfiles and lockfiles
COPY --chown=nonroot:nonroot package.json $HOME/
COPY --chown=nonroot:nonroot yarn.lock $HOME/
RUN yarn install \
  && (rm -rf /tmp/* || true)

COPY --chown=nonroot:nonroot ./Gemfile $HOME/Gemfile
COPY --chown=nonroot:nonroot ./Gemfile.lock $HOME/Gemfile.lock

RUN bundle config set --local without 'development test' \
  && bundle install

COPY --chown=nonroot:nonroot . $HOME

RUN bundle exec rails assets:precompile \
  && yarn cache clean \
  && (rm -rf /tmp/* || true) \
  # Cleanup
  && rm -rf $BUNDLE_PATH/*.gem \
  && find $BUNDLE_PATH/ruby -name "*.c" -delete \
  && find $BUNDLE_PATH/ruby -name "*.o" -delete \
  && find $BUNDLE_PATH/ruby -name ".git"  -type d -prune -execdir rm -rf {} +

# https://github.com/rubygems/rubygems/issues/3225
RUN rm -rf $GEM_HOME/bundle/ruby/*/cache

################################################################
###                     Deployable image                     ###
################################################################

FROM base as deploy

# Will be overwritten in k8s cluster, but needed to run locally
ENV FDSH_GATEWAY_DB_PORT=27017
ENV FDSH_GATEWAY_DB_REPLICA_SET_NAME=fdsh-gateway-dev          
ENV FDSH_GATEWAY_DB_USERNAME=fdsh-gateway
ENV RABBITMQ_HOST=amqp://localhost          
ENV RABBITMQ_URL_EVENT_SOURCE=amqp://localhost:5672   
ENV RABBITMQ_URL=amqp://localhost:5672          
ENV RABBITMQ_VHOST=event_source

# Copy prebuilt gems
COPY --chown=nonroot:nonroot --from=prod_gems_and_assets $BUNDLE_PATH $BUNDLE_PATH

# Copy all app code again (sans gems, node_modules, assets)
COPY --chown=nonroot:nonroot . $HOME

# Copy prebuilt assets
COPY --chown=$USERNAME:$USERNAME --from=prod_gems_and_assets $HOME/public $HOME/public

# Copy environment-based config files
COPY --chown=nonroot:nonroot ./.docker/config/mongoid.yml $HOME/config
COPY --chown=nonroot:nonroot ./.docker/config/credentials.yml.enc $HOME/config
COPY --chown=nonroot:nonroot ./.docker/config/master.key $HOME/config
COPY --chown=nonroot:nonroot ./.docker/config/production.rb $HOME/config/environments

USER nonroot

ENV RAILS_ENV=production
