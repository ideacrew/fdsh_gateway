# frozen_string_literal: true

require 'spec_helper'
require 'medicare_metadata_setup'

RSpec.describe Fdsh::Pvc::Medicare::Request::PvcDirector do

  before :each do
    DatabaseCleaner.clean
    @file_path = "#{Rails.root}/pvc_request_outbound"
    expect(Dir.glob("#{@file_path}/*").count).to eq(0)
  end

  after :each do
    # delete the most recent manifest (the one generated by this spec)
    manifest_from_spec = Dir[Rails.root.join("pvc_request_outbound/SBE00ME.DSH.PVC1.D*.IN")].max { |f1, f2| File.mtime(f1) <=> File.mtime(f2) }
    File.delete(manifest_from_spec)
  end

  let!(:params_manifest) {{ :assistance_year => 1000, :type => "pvc_manifest_type" }}
  let!(:params_request) {{ :subject_id => "1000", :command => "medicare", :request_payload => APPLICANT_1.to_json }}

  subject do
    Pdm::Request::FindOrCreate.new.call(params_request, params_manifest)
    described_class.new.call(1000, 10)
  end

  context 'success' do
    it 'should return a success monad' do
      expect(subject.success?).to be_truthy
    end

    it 'should create a zip file in the pvc_request_outbound folder' do
      subject
      expect(Dir.glob("#{@file_path}/*").count).to eq(1)
    end
  end
end